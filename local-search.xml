<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>A Blog Is All You Need</title>
    <link href="/20230312-A-Blog-Is-All-You-Need.html"/>
    <url>/20230312-A-Blog-Is-All-You-Need.html</url>
    
    <content type="html"><![CDATA[<p>本文主要介绍如何快速搭建一个私人博客（以发布一个在线网页为目标）。</p><span id="more"></span><h1 id="搭建的技术方案"><a href="#搭建的技术方案" class="headerlink" title="搭建的技术方案"></a>搭建的技术方案</h1><p>该博客在搭建过程中用到的技术有 <code>GitHub Pages</code> 、 <code>Hexo</code> 、 <code>Fluid</code> 。与它们相关的网络资源如下：</p><ul><li><code>GitHub Pages</code> 的<a href="https://pages.github.com/">官方主页</a>；</li><li><code>Hexo</code> 的<a href="https://hexo.io/zh-cn/docs/">官方中文文档</a>；</li><li><code>Fluid</code> 的<a href="https://hexo.fluid-dev.com/docs/">中文用户手册</a>。</li></ul><p>在正式开始搭建之前，需要确保以下工作已经完成：</p><ul><li>成功注册一个 <code>GitHub</code> 账号；</li><li>下载并安装好 <code>Node.js</code> ；</li><li>下载并安装好 <code>Git</code> 。</li></ul><h1 id="搭建步骤——以发布一个在线网页为目标"><a href="#搭建步骤——以发布一个在线网页为目标" class="headerlink" title="搭建步骤——以发布一个在线网页为目标"></a>搭建步骤——以发布一个在线网页为目标</h1><p>接下来的一系列步骤以最终能发布一个在线网页为目标，更细节、个性化的操作可以参考<a href="#%E6%90%AD%E5%BB%BA%E7%9A%84%E6%8A%80%E6%9C%AF%E6%96%B9%E6%A1%88">前面介绍的官方文档</a>完成。</p><h2 id="本地静态网站的搭建"><a href="#本地静态网站的搭建" class="headerlink" title="本地静态网站的搭建"></a>本地静态网站的搭建</h2><h3 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h3><p>首先确保前面提到的 <code>Node.js</code> 以及 <code>Git</code> 都已正确安装。在终端分别输入命令 <code>node -v</code> 以及命令 <code>git -v</code> ，如果上述两者都已安装成功，那么会正确显示版本号。</p><h3 id="安装-Hexo"><a href="#安装-Hexo" class="headerlink" title="安装 Hexo"></a>安装 <code>Hexo</code></h3><p>该步骤非常简单，只需要在终端输入命令 <code>npm install hexo-cli -g</code> 。安装完毕后同样可以在终端输入命令 <code>hexo -v</code> 进行检测，如果正确输出版本号，则说明安装成功。</p><h3 id="生成博客文件夹"><a href="#生成博客文件夹" class="headerlink" title="生成博客文件夹"></a>生成博客文件夹</h3><p>随便挑选一个你希望存放博客文件夹的目录（比如D盘），在该目录下打开 <code>Git Bash</code> 并输入命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo init my_new_blog<br></code></pre></td></tr></table></figure><p>新建一个名为 <code>my_new_blog</code> 的博客文件夹，再使用 <code>cd my_new_blog</code> 进入该文件夹。</p><h3 id="访问本地静态网站"><a href="#访问本地静态网站" class="headerlink" title="访问本地静态网站"></a>访问本地静态网站</h3><p>进入该博客文件夹后，输入命令 <code>npm install</code> 安装所依赖的库，然后输入命令 <code>hexo s</code> 即可在本地生成预览网页。</p><p>在浏览器中输入地址 <code>localhost:4000</code> 并访问，即可看到生成的本地预览网页。</p><h2 id="切换主题为-Fluid"><a href="#切换主题为-Fluid" class="headerlink" title="切换主题为 Fluid"></a>切换主题为 <code>Fluid</code></h2><p>通过前面步骤所生成的网页默认使用 <code>landscape</code> 主题，接下来将介绍如何将其修改为 <code>Fluid</code> 主题。</p><p>直接在博客目录下执行命令 <code>npm install --save hexo-theme-fluid</code> 安装主题，然后删除目录下原有的 <code>_config.landscape.yml</code> 文件，新建一个 <code>_config.fluid.yml</code> 文件，并将<a href="https://github.com/fluid-dev/hexo-theme-fluid/blob/master/_config.yml">Fluid官方远程仓库的_config.yml文件</a>的内容全部复制到 <code>_config.fluid.yml</code> 中去。</p><p>打开本地目录的 <code>_config.yml</code> 文件，并进行如下修改：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">theme:</span> <span class="hljs-string">fluid</span>  <span class="hljs-comment"># 指定主题</span><br><br><span class="hljs-attr">language:</span> <span class="hljs-string">zh-CN</span>  <span class="hljs-comment"># 指定语言，会影响主题显示的语言，按需修改</span><br></code></pre></td></tr></table></figure><p>重新输入命令 <code>hexo s</code> 并访问 <code>localhost:4000</code> ，即可看到修改完主题后的静态网页。值得注意的是，文件 <code>_config.fluid.yml</code> 是主题 <code>Fluid</code> 的配置文件，注释详尽，可以结合用户手册的<a href="https://hexo.fluid-dev.com/docs/guide/">配置指南</a>对其进行修改，实现网站风格的个性化定制。</p><h2 id="将本地静态网站发布到-GitHub-上"><a href="#将本地静态网站发布到-GitHub-上" class="headerlink" title="将本地静态网站发布到 GitHub 上"></a>将本地静态网站发布到 <code>GitHub</code> 上</h2><p>首先登陆自己的 <code>GitHub</code> 账号，新建一个仓库，仓库名必须按照 <code>你的GitHub用户名.github.io</code> 的方式命名，否则会发布不成功。</p><p>然后建立当前主机与自己 <code>GitHub</code> 账号的 <code>SSH</code> 连接，具体可参考 <code>GitHub</code> 关于这一部分的<a href="https://docs.github.com/cn/authentication/connecting-to-github-with-ssh">官方文档</a>。</p><p>修改博客目录下 <code>_config.yml</code> 文件的参数：</p><ul><li><code># URL</code> 部分<ul><li>修改 <code>url:</code> 的值为 <code>https://你的GitHub用户名.github.io</code> ；</li></ul></li><li><code># Deployment</code> 部分<ul><li>修改 <code>type:</code> 的值为 <code>git</code> ；</li><li>修改 <code>repo:</code> 的值为 <code>https://github.com/你的GitHub用户名/你的GitHub用户名.github.io</code> ；</li><li>修改 <code>branch:</code> 的值为 <code>main</code> 。</li></ul></li></ul><p>现在，在我们正式发布到 <code>GitHub</code> 之前，可以先使用命令 <code>hexo new &quot;你的网页名&quot;</code> 创建一个专属于你的网页。在博客目录下的 <code>source/_posts</code> 中，你可以找到这个网页对应的 <code>.md</code> 文件，修改 <code>.md</code> 文件，就能修改网页内容。</p><p>然后，执行命令 <code>npm install hexo-deployer-git --save</code> 安装 <code>hexo-deployer-git</code> ，再依次执行命令 <code>hexo cl</code> 、 <code>hexo g</code> 、 <code>hexo d</code> ，从而完成缓存清除、生成博客文件、提交网站到远程仓库的操作。</p><p>最后，访问地址 <code>https://你的用户名.github.io</code> ，将会看到你创建的网站已经被顺利发布，包括你刚刚新创建的网页也被一同提交到了线上。</p><p>至此，本文已经顺利完成任务——发布一个在线网页。要实现更丰富更酷炫的功能，可以进一步阅读<a href="#%E6%90%AD%E5%BB%BA%E7%9A%84%E6%8A%80%E6%9C%AF%E6%96%B9%E6%A1%88">前面介绍的官方文档</a>。</p>]]></content>
    
    
    <categories>
      
      <category>技术经验</category>
      
      <category>博客管理</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hexo</tag>
      
      <tag>Fluid</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
